View(gsa)
gsa = subset(gsa, select = -c("X"))
gsa = subset(gsa, select = -c(X))
View(gsa)
MT <- gsa %>% filter(recipient_state_code == "MT")
census_MT <- MT %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
first25 <- read.csv("Code/CensusFirst25.csv", header = TRUE,
stringsAsFactors = FALSE, colClass ="factor")
View(first25)
NE <- gsa %>% filter(recipient_state_code == "NE")
census_NE <- NE %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
NV <- gsa %>% filter(recipient_state_code == "NV")
census_NV <- NV %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
NH <- gsa %>% filter(recipient_state_code == "NH")
census_NH <- NH %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
NJ <- gsa %>% filter(recipient_state_code == "NJ")
census_NJ <- NJ %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
NM <- gsa %>% filter(recipient_state_code == "NM")
census_NM <- NM %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
NY <- gsa %>% filter(recipient_state_code == "NY")
census_NY <- NY %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
NC <- gsa %>% filter(recipient_state_code == "NC")
census_NC <- NC %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
ND <- gsa %>% filter(recipient_state_code == "ND")
census_ND <- ND %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
MP <- gsa %>% filter(recipient_state_code == "MP")
census_MP <- MP %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
GU <- gsa %>% filter(recipient_state_code == "GU")
census_GU <- GU %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
OH <- gsa %>% filter(recipient_state_code == "OH")
census_OH <- OH %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
OK <- gsa %>% filter(recipient_state_code == "OK")
census_OK <- OK %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
first25 = subset(first25, select = -c(X))
View(first25)
census_MT <- MT %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
str(MT)
?geocode
census_MO <- gsa %>% filter(recipient_state_code == "MO") %>%
geocode(street = recipient_address_line_1, city = recipient_city_name, state = recipient_state_code,
method = "census", full_results = TRUE, api_options = list(census_return_type = 'geographies'))
gsa <- read.csv("Code/GSA_Federal_Contracts_Addresses.csv")
MT <- gsa %>% filter(recipient_state_code == "MT")
census_MT <- MT %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
View(gsa)
gsa = subset(gsa, select = -c(X))
View(gsa)
MT <- gsa %>% filter(recipient_state_code == "MT")
census_MT <- MT %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
NE <- gsa %>% filter(recipient_state_code == "NE")
census_NE <- NE %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
NV <- gsa %>% filter(recipient_state_code == "NV")
census_NV <- NV %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
NH <- gsa %>% filter(recipient_state_code == "NH")
census_NH <- NH %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
NJ <- gsa %>% filter(recipient_state_code == "NJ")
census_NJ <- NJ %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
NM <- gsa %>% filter(recipient_state_code == "NM")
census_NM <- NM %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
NY <- gsa %>% filter(recipient_state_code == "NY")
census_NY <- NY %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
NC <- gsa %>% filter(recipient_state_code == "NC")
census_NC <- NC %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
ND <- gsa %>% filter(recipient_state_code == "ND")
census_ND <- ND %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
MP <- gsa %>% filter(recipient_state_code == "MP")
census_MP <- MP %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
GU <- gsa %>% filter(recipient_state_code == "GU")
census_GU <- GU %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
OH <- gsa %>% filter(recipient_state_code == "OH")
census_OH <- OH %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
OK <- gsa %>% filter(recipient_state_code == "OK")
census_OK <- OK %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
OR <- gsa %>% filter(recipient_state_code == "OR")
census_OR <- OR %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
PA <- gsa %>% filter(recipient_state_code == "PA")
census_PA <- PA %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
PR <- gsa %>% filter(recipient_state_code == "PR")
census_PR <- PR %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
RI <- gsa %>% filter(recipient_state_code == "RI")
census_RI <- RI %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
SC <- gsa %>% filter(recipient_state_code == "SC")
census_SC <- SC %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
SD <- gsa %>% filter(recipient_state_code == "SD")
census_SD <- SD %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
TN <- gsa %>% filter(recipient_state_code == "TN")
census_TN <- TN %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
TX <- gsa %>% filter(recipient_state_code == "TX")
census_TX <- TX %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
TT <- gsa %>% filter(recipient_state_code == "TT")
census_TT <- TT %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
TT <- gsa %>% filter(recipient_state_code == "TT")
census_TT <- TT %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
UT <- gsa %>% filter(recipient_state_code == "UT")
census_UT <- UT %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
rm(TT)
VT <- gsa %>% filter(recipient_state_code == "VT")
census_VT <- VT %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
VA <- gsa %>% filter(recipient_state_code == "VA")
census_VA <- VA %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
VI <- gsa %>% filter(recipient_state_code == "VI")
census_VI <- VI %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
WA <- gsa %>% filter(recipient_state_code == "WA")
census_WA <- WA %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
WV <- gsa %>% filter(recipient_state_code == "WV")
census_WV <- WV %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
WI <- gsa %>% filter(recipient_state_code == "WI")
census_WI <- WI %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
WY <- gsa %>% filter(recipient_state_code == "WY")
census_WY <- WY %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
View(gsa)
View(first25)
AS <- gsa %>% filter(recipient_state_code == "AS")
census_AS <- AS %>% geocode(street = recipient_address_line_1,
city = recipient_city_name,
state = recipient_state_code,
method = "census", full_results = TRUE,
api_options = list(census_return_type = 'geographies'))
census50 <- census_AS %>% rbind(census_GU) %>%
rbind(census_MP) %>%
rbind(census_MT) %>%
rbind(census_NC) %>%
rbind(census_ND) %>%
rbind(census_NE) %>%
rbind(census_NH) %>%
rbind(census_NJ) %>%
rbind(census_NM) %>%
rbind(census_NV) %>%
rbind(census_NY) %>%
rbind(census_OH) %>%
rbind(census_OK) %>%
rbind(census_OR) %>%
rbind(census_PA) %>%
rbind(census_PR) %>%
rbind(census_RI) %>%
rbind(census_SC) %>%
rbind(census_SD) %>%
rbind(census_TN) %>%
rbind(census_TX) %>%
rbind(census_UT) %>%
rbind(census_VA) %>%
rbind(census_VI) %>%
rbind(census_VT) %>%
rbind(census_WA) %>%
rbind(census_WI) %>%
rbind(census_WV) %>%
rbind(census_WY)
census_all <- first25 %>% rbind(census50)
View(census50)
write.csv(census50, file = "CensusLast25.csv")
hubzones <- read.csv("Code/Censustractdesignations.csv", header = TRUE,
stringsAsFactors = FALSE, colClass ="factor")
hubzones <- read.csv("Code/Censustractdesignations.xlsx", header = TRUE,
stringsAsFactors = FALSE, colClass ="factor")
hubzones <- read.csv("Code/Censustractdesignations.xlsx")
View(hubzones)
hubzones <- read.csv("Code/Censustractdesignations.xlsx", header = TRUE)
hubzones <- read.xlsx("Code/Censustractdesignations.xlsx", header = TRUE)
hubzones <- read.table("Code/Censustractdesignations.xlsx", header = TRUE)
View(hubzones)
hubzones <- read.csv("Code/Censustractdesignations.csv", header = TRUE)
hubzones <- read.csv("Code/Censustractdesignations.csv")
?join
census50 <- census50 %>% left_join(hubzones)
census50 <- census50 %>% left_join(census50, hubzones)
census50 <- census50 %>% left_join(hubzones, by = join_by(recipient_state_code == state))
census50 <- census50 %>% left_join(hubzones, by = join_by(recipient_state_code == State))
census50 <- census50 %>% unite(Full.Tract.ID, state_fips:census_tract, sep = '', remove = TRUE)
View(census50)
?rbind
census_all <- first25 %>% rbind(census50)
census50 <- read.csv("Code/Censuslast25.csv", header = TRUE,
stringsAsFactors = FALSE, colClass ="factor")
census50 <- read.csv("Code/Censuslast25.csv", header = TRUE,
stringsAsFactors = FALSE, colClass ="factor")
census50 <- census50 %>% unite(Full.Tract.ID, state_fips:census_tract, sep = '', remove = TRUE)
census50 = subset(census50, select = -c(X))
census_all <- first25 %>% rbind(census50)
write.csv(census_all, file = "CensusAll.csv")
census_all <- read.csv("Code/CensusAll.csv", header = TRUE,
stringsAsFactors = FALSE, colClass = "Factor")
census_all <- read.csv("Code/CensusAll.csv", header = TRUE,
stringsAsFactors = FALSE)
View(census_all)
census_all = subset(census_all, select = -c(X))
hubzones <- read.csv("Code/CensusDesignations_Cleaned.csv", header = TRUE,
stringsAsFactors = FALSE, colClass = "factor")
View(hubzones)
census_hubzone <- merge(census_all, hubzones, by = "Full.Tract.ID")
View(census_hubzone)
write.csv(census_hubzone, file = "Census_Hubzone_Master.csv")
census <- read.csv("Code/Census_Hubzone_Master.csv")
contracts <- read.csv("Code/General_Services_Administration_Federal_Contracts.csv")
census = subset(census, select = -c(unique_id,X, X.1, X.2,id, census_block,
tiger_side, tiger_line_id, recipient_zip_4_code))
View(census)
contracts = subset(contracts, select = -c(X, X.1))
census_distinct <- census %>% distinct()
library(tidyverse)
library(dplyr)
library(tidycensus)
library(tidyselect)
library(tidygeocoder)
census_distinct <- census %>% distinct()
allcontracts <- inner_join(census_distinct, contracts, by = c("recipient_address_line_1"), relationship = "many-to-many")
View(allcontracts)
allcontracts = subset(allcontracts, select = -c(recipient_address_line_2,
input_address, match_type,
match_indicator, match_address))
allcontracts = subset(allcontracts, select = -c(recipient_address_line_2,
input_address, match_type,
match_indicator, matched_address))
write.csv(allcontracts, file = "All_Contracts_Final.csv")
ols1l <- lm(federal_action_obligation ~ hubzone, minority_firm, data = allcontracts)
print(ols1l)
ols1l
summary(ols1l)
ols1l <- lm(federal_action_obligation ~ hubzone, data = allcontracts)
summary(ols1l)
View(ols1l)
ols1l <- lm(federal_action_obligation ~ hubzone + black_firm + hubzone*black_firm, data = allcontracts)
summary(ols1l)
ols2l <- lm(number_of_actions ~ hubzone + black_firm + hubzone*black_firm, data = allcontracts)
summary(ols2l)
coeftest(ols2l, vcov = vcovHC(ols2l, type = "HC1"))
library(lmtest)
install.packages("lmtest")
library(lmtest)
coeftest(ols2l, vcov = vcovHC(ols2l, type = "HC1"))
install.packages("fixest")
install.packages("sandwich")
library(fixest)
library(sandwich)
coeftest(ols2l, vcov = vcovHC(ols2l, type = "HC1"))
coeftest(ols1l, vcov = vcovHC(ols1l, type = "HC1"))
allcontracts <- read.csv("Data/All_Contracts_Final.csv")
View(allcontracts)
library(tidyverse)
library(dplyr)
library(tidycensus)
library(tidyselect)
library(tidygeocoder)
library(lmtest)
library(fixest)
library(sandwich)
decennial <- read.csv("Data/DECENNIALDP2020.DP1-Data.csv")
View(decennial)
decennial$GEO_ID <- substr(decennial$GEO_ID, 10, nchar(decennial$GEO_ID))
View(decennial)
library(tidyverse)
library(dplyr)
library(tidycensus)
library(stringr)
library(panelr)
install.packages("panelr")
install.packages()
allcontracts <- read.csv("Data/All_Contracts_Final.csv", header = TRUE,
stringsAsFactors = FALSE, colClass ="factor")
allcontracts <- read.csv("Data/All_Contracts_Final.csv")
decennial <- read.csv("Data/DECENNIALDP2020.DP1-Data.csv")
decennial$GEO_ID <- substr(decennial$GEO_ID, 10, nchar(decennial$GEO_ID))
View(decennial)
View(allcontracts)
federalcontracts <- read.csv("Code/Fenderal_COntracts_Census_Demographics_Final.csv")
federalcontracts <- read.csv("Code/Federal_COntracts_Census_Demographics_Final.csv")
federalcontracts <- read.csv("Code/Federal_Contracts_Census_Demographics_Final.csv")
federalcontracts <- read.csv("Data/Federal_Contracts_Census_Demographics_Final.csv")
View(federalcontracts)
library(tidyverse)
library(dplyr)
library(tidycensus)
library(stringr)
library(panelr)
install.packages("panelr")
install.packages()
library(tidyverse)
library(dplyr)
library(tidycensus)
library(stringr)
library(panelr)
install.packages("panelr")
install.packages()
library(tidyverse)
library(dplyr)
library(tidycensus)
library(stringr)
library(panelr)
federalcontracts <- read.csv("Data/Federal_Contracts_Census_Demographics_Final.csv")
reg1 <- federalcontracts %>% lm(total_dollars_obligated ~ hubzone,
alaskan_native_firm,
american_indian_firm,
indian_tribe_firm,
native_hawaiian_firm,
tribal_firm, asian_pacific_firm,
subcontinentasian_asian_indianamerican_tribe_firm,
black_firm,
hispanic_american_firm,
native_american_firm,
other_minority_firm,
small_business,
total_pop,
median_age,
median_household_income,
median_earnings)
reg1 <- federalcontracts %>% lm(total_dollars_obligated ~ hubzone,
alaskan_native_firm,
american_indian_firm,
asian_pacific_firm,
indian_tribe_firm,
native_hawaiian_firm,
tribal_firm, asian_pacific_firm,
subcontinentasian_asian_indianamerican_tribe_firm,
black_firm,
hispanic_american_firm,
native_american_firm,
other_minority_firm,
small_business,
total_pop,
median_age,
median_household_income,
median_earnings)
View(federalcontracts)
str(federalcontracts)
federalcontracts <- read.csv("Data/Federal_Contracts_Census_Demographics_Final.csv", header = TRUE,
stringsAsFactors = FALSE, colClass ="factor"))
federalcontracts <- read.csv("Data/Federal_Contracts_Census_Demographics_Final.csv", header = TRUE,
stringsAsFactors = FALSE, colClass ="factor")
str(federalcontracts)
