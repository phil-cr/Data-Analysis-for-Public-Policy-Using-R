library(tidyverse)
library(dplyr)
library(tidycensus)

#code to read in the csv gov contracting files
temp21_1 <- read.csv("Data/Hubzones/2021/FY2021_All_Contracts_Full_1.csv", header = TRUE,
                     stringsAsFactors = FALSE, colClass ="factor")

temp21_2 <- read.csv("Data/Hubzones/2021/FY2021_All_Contracts_Full_2.csv", header = TRUE,
                     stringsAsFactors = FALSE, colClass ="factor")

temp21_3 <- read.csv("Data/Hubzones/2021/FY2021_All_Contracts_Full_3.csv", header = TRUE,
                     stringsAsFactors = FALSE, colClass ="factor")

temp21_4 <- read.csv("Data/Hubzones/2021/FY2021_All_Contracts_Full_4.csv", header = TRUE,
                     stringsAsFactors = FALSE, colClass ="factor")

temp21_5 <- read.csv("Data/Hubzones/2021/FY2021_All_Contracts_Full_5.csv", header = TRUE,
                     stringsAsFactors = FALSE, colClass ="factor")

temp21_6 <- read.csv("Data/Hubzones/2021/FY2021_All_Contracts_Full_6.csv", header = TRUE,
                     stringsAsFactors = FALSE, colClass ="factor")

temp21_7 <- read.csv("Data/Hubzones/2021/FY2021_All_Contracts_Full_7.csv", header = TRUE,
                     stringsAsFactors = FALSE, colClass ="factor")

#code to remove the necessary columns (repeat for all three dataframes in a given year)
temp2021_7 <- temp21_7 %>% select(alaskan_native_corporation_owned_firm, american_indian_owned_business, 
                                  indian_tribe_federally_recognized, native_hawaiian_organization_owned_firm, tribally_owned_firm, 
                                  minority_owned_business, asian_pacific_american_owned_business, action_date_fiscal_year, 
                                  subcontinent_asian_asian_indian_american_owned_business, black_american_owned_business,
                                  hispanic_american_owned_business, native_american_owned_business,
                                  other_minority_owned_business, contracting_officers_determination_of_business_size_code,
                                  historically_underutilized_business_zone_hubzone_firm, recipient_city_name, recipient_name, 
                                  awarding_agency_name, federal_action_obligation, total_dollars_obligated, recipient_country_code, 
                                  recipient_county_name, recipient_state_code, recipient_state_name, number_of_actions, recipient_zip_4_code, 
                                  recipient_address_line_1, recipient_address_line_2)

#code to combine all three dataframes from a single year
temp21<- temp2021_1 %>% rbind(temp2021_2) %>% 
  rbind(temp2021_3) %>% 
  rbind(temp2021_4) %>% 
  rbind(temp2021_5) %>% 
  rbind(temp2021_6) %>% 
  rbind(temp2021_7)

#code to download the newly binded dataframe from one single year into a .csv file on your computer
write.csv(temp21, file = "FederalContracts2021.csv")

#code for reading in the final singular and cleaned dataframes from each year
temp2023 <- read.csv("FederalContracts2023.csv", header = TRUE,
                     stringsAsFactors = FALSE, colClass ="factor")

# code to combine all 10 cleaned years
temp21<- temp2023 %>% rbind(temp2022) %>% 
  rbind(temp2021) %>% 
  rbind(temp2020) %>% 
  rbind(temp2019) %>% 
  rbind(temp2018) %>% 
  rbind(temp2017) %>% 
  rbind(temp2016) %>% 
  rbind(temp2015) %>% 
  rbind(temp2014) %>% 
  rbind(temp2013) 


test

#save the one combined document

#code to remove non-US addresses
temp13 <- temp13 %>% filter(recipient_country_code == "USA")

#getting census tract ids from addresses
addresses <- temp2018 %>% 
  select(recipient_address_line_1, recipient_address_line_2,
         recipient_city_name, 
         recipient_state_code, recipient_state_name, 
         recipient_zip_4_code) %>%
  mutate(unique_id = row_number()) %>%
  select(unique_id, everything())

#recoding the census tract information to dummy variables
censustracts <- census %>% 
  mutate(hubzone = recode(Status.as.of.January.2018, "Not Qualified" = "0", "Qualified" = "1", "Redesignated until Dec 2021" = "1")) %>% 
  select(Full.Tract.ID, County.Name, State, hubzone)

#Drop X.1 and recipient_name

contracts <- contracts %>% 
  select(X, alaskan_native_corporation_owned_firm, american_indian_owned_business, 
       indian_tribe_federally_recognized, native_hawaiian_organization_owned_firm, tribally_owned_firm, 
       minority_owned_business, asian_pacific_american_owned_business, action_date_fiscal_year, 
       subcontinent_asian_asian_indian_american_owned_business, black_american_owned_business,
       hispanic_american_owned_business, native_american_owned_business,
       other_minority_owned_business, contracting_officers_determination_of_business_size_code,
       historically_underutilized_business_zone_hubzone_firm, recipient_city_name, 
       awarding_agency_name, federal_action_obligation, total_dollars_obligated, recipient_country_code, 
       recipient_county_name, recipient_state_code, recipient_state_name, number_of_actions, recipient_zip_4_code, 
       recipient_address_line_1, recipient_address_line_2)

#recoding the ethnicity variables to dummy variables

contracts <- contracts %>% 
  mutate(alaskan_native_firm = recode(alaskan_native_corporation_owned_firm, "f" = "0", "t" = "1")) %>% 
  mutate(american_indian_firm = recode(american_indian_owned_business, "f" = "0", "t" = "1")) %>%
  mutate(indian_tribe_firm = recode(indian_tribe_federally_recognized, "f" = "0", "t" = "1")) %>%
  mutate(native_hawaiian_firm = recode(native_hawaiian_organization_owned_firm, "f" = "0", "t" = "1")) %>%
  mutate(tribal_firm = recode(tribally_owned_firm, "f" = "0", "t" = "1")) %>%
  mutate(minority_firm = recode(minority_owned_business, "f" = "0", "t" = "1")) %>%
  mutate(asian_pacific_firm = recode(asian_pacific_american_owned_business, "f" = "0", "t" = "1")) %>%
  mutate(indian_tribe_firm = recode(indian_tribe_federally_recognized, "f" = "0", "t" = "1")) %>%
  mutate(subcontinentasian_asian_indianamerican_tribe_firm = recode(subcontinent_asian_asian_indian_american_owned_business, "f" = "0", "t" = "1")) %>%
  mutate(black_firm = recode(black_american_owned_business, "f" = "0", "t" = "1")) %>%
  mutate(hispanic_american_firm = recode(hispanic_american_owned_business, "f" = "0", "t" = "1")) %>%
  mutate(native_american_firm = recode(native_american_owned_business, "f" = "0", "t" = "1")) %>%
  mutate(other_minorityy_firm = recode(other_minority_owned_business, "f" = "0", "t" = "1"))

#drop old T/F coded variables

contracts = subset(contracts, select = -c(alaskan_native_corporation_owned_firm,
                                          american_indian_owned_business,
                                          indian_tribe_federally_recognized,
                                          native_hawaiian_organization_owned_firm,
                                          tribally_owned_firm,
                                          minority_owned_business,
                                          asian_pacific_american_owned_business,
                                          indian_tribe_federally_recognized,
                                          subcontinent_asian_asian_indian_american_owned_business,
                                          black_american_owned_business,
                                          hispanic_american_owned_business,
                                          native_american_owned_business,
                                          other_minority_owned_business))

#Write clean csv
write.csv(contracts, file = "AllFederalContracts_clean.csv")

#New address df
addresses <- contracts %>% 
  select(X, recipient_address_line_1, recipient_city_name, recipient_state_code,
         recipient_zip_4_code)

write.csv(addresses, file = "Addresses.csv")


